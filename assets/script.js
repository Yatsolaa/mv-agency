"use strict";!function o(r,c,u){function a(t,e){if(!c[t]){if(!r[t]){var n="function"==typeof require&&require;if(!e&&n)return n(t,!0);if(l)return l(t,!0);throw(e=new Error("Cannot find module '"+t+"'")).code="MODULE_NOT_FOUND",e}n=c[t]={exports:{}},r[t][0].call(n.exports,function(e){return a(r[t][1][e]||e)},n,n.exports,o,r,c,u)}return c[t].exports}for(var l="function"==typeof require&&require,e=0;e<u.length;e++)a(u[e]);return a}({1:[function(e,t,n){var u=document.querySelector(".js-animated-text"),a=document.querySelector(".js-to-left"),l=document.querySelector(".js-to-right");window.addEventListener("scroll",function(){var e,t,n,o,r=u.offsetTop,c=window.scrollY;e=u,t=window.scrollY,n=t+window.innerHeight,o=e.offsetTop,e=o+e.offsetHeight,(t<=o&&o<=n||t<=e&&e<=n)&&(o=c-r+800,a.style.transform="translateX("+(-(c-r)-800)+"px)",l.style.transform="translateX("+o+"px)")}),document.querySelectorAll(".js-contact-us").forEach(function(e){e.addEventListener("click",function(){document.querySelector(".popup").classList.add("is-active"),document.querySelector(".overlay").classList.add("is-active"),document.querySelector("body").style.overflow="hidden"})}),document.querySelector(".overlay").addEventListener("click",function(){document.querySelector(".popup").classList.remove("is-active"),document.querySelector(".overlay").classList.remove("is-active"),document.querySelector("body").style.overflow="auto"}),document.getElementById("contactForm").addEventListener("submit",function(e){e.preventDefault(),e={name:document.getElementById("name").value,email:document.getElementById("email").value,number:document.getElementById("phone").value},emailjs.send("service_9t61o06","template_tfb31ug",e).then(function(e){document.getElementById("name").value="",document.getElementById("email").value="",document.getElementById("phone").value="",document.querySelector(".popup").classList.remove("is-active"),document.querySelector(".overlay").classList.remove("is-active"),document.querySelector("body").style.overflow="auto"}).catch(function(e){return console.log(e)})}),document.querySelectorAll(".js-language-swither").forEach(function(e){e.addEventListener("click",function(e){document.querySelectorAll(".js-language-swither").forEach(function(e){e.classList.remove("header__language-switcher--current")}),setTimeout(function(){var e;e=window.location.hash.substring(1),o=e,r()},10),e.target.classList.add("header__language-switcher--current")})});var o="en";function r(){var e=document.getElementById("".concat(o,"-language"));fetch(e.src).then(function(e){return e.json()}).then(function(o){document.querySelectorAll("[data-translate]").forEach(function(e){var t=e.dataset.translate.split("."),n=o;t.forEach(function(e){n=n[e]}),e.innerHTML=n||""})})}document.addEventListener("DOMContentLoaded",r)},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
